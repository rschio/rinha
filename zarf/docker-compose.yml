version: "3.5"

services:
  api01: &api
    # Lembre-se de que seu serviço HTTP deve estar hospedado num repositório
    # publicamente acessível! Ex.: hub.docker.com
    # TODO: Change to a remote image.
    image: ko.local/github.com/rschio/rinha/cmd/service/rinha:v0.0.0
    hostname: api01
    environment:
      - RINHA_DB_HOST=db:5432
    ports:
      - "8081:8080"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "200MB"

  api02:
    <<: *api 
    hostname: api02
    ports:
      - "8082:8080"
 
  nginx:
    image: nginx:latest
    volumes:
      - ./docker/configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999" 
    deploy:
      resources:
        limits:
          cpus: "0.17"
          memory: "10MB"

  db:
    image: postgres:16-alpine
    hostname: db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
   # volumes:
   #   - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    deploy:
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: "0.13"
          memory: "140MB"

  # Open Telemetry.
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.75.0
    container_name: otel-collector
    restart: unless-stopped
    volumes:
      - ./docker/configs/otel/collector-config.yaml:/etc/otelcol-contrib/config.yaml

  jaeger:
    image: bitnami/jaeger:latest
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"

networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1
